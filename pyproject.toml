
[tool.poetry]
name = "pymelcloudhome"
version = "0.1.1"
description = "A modern, fully asynchronous Python library for the Mitsubishi Electric MelCloudHome platform."
authors = ["Martin Hultman <martin@hultman.dev>"]
license = "MIT"
readme = "README.md"
packages = [{include = "pymelcloudhome"}]
homepage = "https://github.com/MHultman/pymelcloudhome"
repository = "https://github.com/MHultman/pymelcloudhome"
keywords = ["melcloudhome", "mitsubishi", "hvac", "api", "asyncio"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.9.5"
pydantic = "^2.7.1"
playwright = "^1.44.0"
beautifulsoup4 = "^4.12.3"
yarl = "^1.9.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
mypy = "^1.10.0"
black = "^24.4.2"
ruff = "^0.4.4"
pytest-asyncio = "^0.23.7"
pytest-aiohttp = "^1.0.0"
python-dotenv = "^1.0.0"
pre-commit = "^3.6.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "playwright.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "bs4.*"
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501"]  # line too long (handled by black)

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
